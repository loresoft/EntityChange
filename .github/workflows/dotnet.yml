name: Build Project

env:
  BUILD_PATH: "${{github.workspace}}/packages"
  BUILD_VERSION: "5.0.${{github.run_number}}"
  BUILD_INFORMATION: "5.0.${{github.run_number}}+Branch.${{github.ref_name}}.Sha.${{github.sha}}"

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: 'dotnet build --configuration Release --no-restore -p:Version="${{env.BUILD_VERSION}}" -p:InformationalVersion="${{env.BUILD_INFORMATION}}"'

      - name: Run Tests
        run: 'dotnet test --configuration Release --no-build --no-restore --collect:"XPlat Code Coverage"'

      - name: Create Packages
        run: 'dotnet pack --configuration Release --include-symbols --include-source --no-build --no-restore -p:Version="${{env.BUILD_VERSION}}" --output "${{env.BUILD_PATH}}"'

      - name: Upload Package Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Packages
          path: "${{env.BUILD_PATH}}"

      - name: Publish Packages
        if: success() && github.event_name != 'pull_request'
        run: |
          dotnet nuget add source --username pwelter34 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/loresoft/index.json"
          for package in $(find -name "*.nupkg"); do
            echo "${0##*/}": Pushing $package...
            dotnet nuget push $package --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
          done

      - name: Publish Release Packages
        if: success() && startsWith(github.ref, 'refs/tags/v')
        run: |
          for package in $(find -name "*.nupkg"); do
            echo "${0##*/}": Pushing $package...
            dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
          done
